@use 'src/assets/styles/base/colours';
@use 'src/assets/styles/base/variables';
@use 'src/assets/styles/globals/globals';

.plan-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  min-height: 100vh;
  width: 100vw;
  box-sizing: border-box;
}

.room-uploader-container {
  max-width: 60vw;
  margin: 0 auto;
  padding: variables.$spacing-2xl;
  @include variables.flex-column;
  align-items: center;
  justify-content: center;
  margin-left: auto;
  margin-right: auto;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  h1 {
    font-size: 3.5rem;
    margin-bottom: variables.$spacing-md;
    color: var(--text-color);
    font-weight: 700;
    text-align: center;
  }

  p {
    margin-bottom: variables.$spacing-2xl;
    text-align: center;
    color: colours.$dark-grey;
    font-size: 1.2rem;
    line-height: 1.6;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
  }
}

.objects-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: variables.$spacing-lg;
  margin-bottom: variables.$spacing-2xl;
  transition: variables.$transition-base;
}

.object-upload {
  @include variables.card-base;
  background: var(--navbar-bg);
  width: 100%;
  max-width: 900px;
  margin: 0 auto;
  margin-left: auto;
  margin-right: auto;
  min-width: 0;
}

.object-header {
  display: flex;
  gap: variables.$spacing-md;
  align-items: center;
  cursor: pointer;
  padding: variables.$spacing-sm;
  border-radius: variables.$border-radius-lg;
  transition: variables.$transition-base;
  width: 100%;
  max-width: 900px;
  margin: 0 auto;

  &:hover {
    background: rgba(colours.$lilac, 0.05);
  }

  .caption-input {
    flex: 1;
    @include variables.input-base;
    border: 2px solid rgba(colours.$lilac, 0.3);
    color: colours.$very-dark-grey;
    background: rgba(colours.$white, 0.9);
    cursor: text;
    margin: 0;

    &:not(:focus) {
      border-color: transparent;
      background: transparent;
      padding-left: 0;
      padding-right: 0;

      &:not(:placeholder-shown) {
        font-weight: 600;
        font-size: 1.2rem;
        color: var(--text-color);
      }
    }

    &:focus {
      border-color: colours.$lilac;
      background: colours.$white;
      box-shadow: 0 4px 12px rgba(colours.$lilac, 0.1);
    }

    &::placeholder {
      color: rgba(colours.$dark-grey, 0.6);
    }
  }

  .remove-btn,
  .toggle-btn {
    @include variables.icon-button;
    color: colours.$dark-grey;
    font-size: 1.1rem;
    min-width: 42px;
  }

  .remove-btn:hover {
    color: colours.$red;
    background: rgba(colours.$red, 0.1);
  }

  .toggle-btn {
    &:hover {
      background: rgba(colours.$lilac, 0.1);
      color: colours.$lilac;
    }

    &.expanded fa-icon {
      transform: rotate(180deg);
    }

    fa-icon {
      transition: variables.$transition-base;
    }
  }
}

.image-upload-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: variables.$spacing-xl;
  margin-top: variables.$spacing-xl;
  animation: slideDown 0.3s ease;
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.image-slot {
  aspect-ratio: 1;
  position: relative;

  .upload-area {
    height: 100%;
    min-height: 160px;
    border: 2px dashed rgba(colours.$lilac, 0.5);
    border-radius: variables.$border-radius-lg;
    overflow: hidden;
    position: relative;
    transition: variables.$transition-base;
    background: var(--upload-bg);

    &:hover {
      border-color: colours.$lilac;
      background: rgba(colours.$lilac, 0.08);

      label {
        color: var(--hover-color);
      }
    }

    input[type='file'] {
      width: 100%;
      height: 100%;
      opacity: 0;
      z-index: 2;

      &:hover {
        cursor: pointer;
      }
    }

    label {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      @include variables.flex-column;
      align-items: center;
      justify-content: center;
      text-align: center;
      color: var(--text-color);
      transition: variables.$transition-base;
      z-index: 1;
      gap: variables.$spacing-xs;

      &:hover {
        cursor: pointer;
      }

      fa-icon {
        font-size: 2rem;
        color: rgba(colours.$lilac, 0.7);
        margin-bottom: variables.$spacing-xs;
      }

      span {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--text-color);
      }

      small {
        font-size: 0.9rem;
        color: rgba(colours.$dark-grey, 0.7);

        &.click-hint {
          position: absolute;
          bottom: variables.$spacing-md;
          left: 0;
          width: 100%;
          text-align: center;
          font-size: 0.85rem;
          color: rgba(colours.$dark-grey, 0.5);
        }
      }
    }
  }

  .image-preview {
    position: relative;
    height: 100%;
    border-radius: variables.$border-radius-lg;
    overflow: hidden;
    box-shadow: variables.$shadow-sm;
    @include variables.hover-scale;

    &:hover .remove-image {
      opacity: 1;
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .image-label {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      padding: variables.$spacing-sm;
      background: rgba(0, 0, 0, 0.6);
      color: colours.$white;
      text-align: center;
      font-size: 0.9rem;
      backdrop-filter: blur(4px);
    }

    .remove-image {
      position: absolute;
      top: variables.$spacing-sm;
      right: variables.$spacing-sm;
      background: rgba(colours.$white, 0.9);
      border: none;
      border-radius: variables.$border-radius-circle;
      width: 2.5rem;
      height: 2.5rem;
      @include variables.flex-center;
      cursor: pointer;
      color: colours.$dark-grey;
      transition: variables.$transition-base;
      opacity: 0;
      backdrop-filter: blur(4px);

      &:hover {
        background: colours.$white;
        color: colours.$red;
        transform: scale(1.1);
      }
    }
  }
}

.action-buttons {
  display: flex;
  justify-content: center;
  gap: variables.$spacing-xl;
  margin-top: variables.$spacing-2xl;

  .btn {
    min-width: 200px;
    padding: variables.$spacing-md variables.$spacing-xl;
    border: none;
    border-radius: variables.$border-radius-lg;
    font-size: 1.1rem;
    font-weight: 500;
    cursor: pointer;
    transition: variables.$transition-base;
    @include variables.flex-center;
    gap: variables.$spacing-sm;

    &.add-object {
      background: var(--background-color);
      color: colours.$lilac;
      border: 2px solid colours.$lilac;
      padding: 0.875rem variables.$spacing-xl;

      &:hover {
        background: rgba(colours.$lilac, 0.1);
        transform: translateY(-2px);
      }
    }

    &.get-planning {
      background: colours.$lilac;
      color: colours.$white;
      box-shadow: 0 4px 12px rgba(colours.$lilac, 0.3);

      &:hover {
        filter: brightness(0.95);
        transform: translateY(-2px);
      }
    }
  }
}

.pagination-controls {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  margin: 2rem 0;

  .pagination-btn {
    padding: 0.5rem 1rem;
    border: none;
    background: none;
    cursor: pointer;
    color: var(--primary-color);
    transition: opacity 0.2s;

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    &:not(:disabled):hover {
      opacity: 0.8;
    }
  }

  .page-info {
    font-size: 0.9rem;
    color: var(--text-color);
  }
}

@keyframes morph {
  0% {
    border-radius: 0;
    transform: rotate(0deg);
  }
  33% {
    border-radius: 0 50% 0 50%;
    transform: rotate(120deg);
  }
  66% {
    border-radius: 50%;
    transform: rotate(240deg);
  }
  100% {
    border-radius: 0;
    transform: rotate(360deg);
  }
}

.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(colours.$white, 0.15);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(5px);
  transition: variables.$transition-base;
}

.loading-content {
  @include variables.flex-column;
  align-items: center;
  gap: variables.$spacing-xl;
  padding: variables.$spacing-2xl;
  background: colours.$white;
  border-radius: variables.$border-radius-lg;
  box-shadow: 0 4px 20px rgba(colours.$black, 0.1);
  transition: variables.$transition-base;

  &.error {
    border-left: 4px solid colours.$red;

    .error-icon {
      color: colours.$red;
    }

    p {
      color: colours.$very-dark-grey;
      max-width: 400px;
      text-align: center;
    }
  }

  p {
    color: colours.$lilac;
    font-size: 1.2rem;
    font-weight: 500;
  }

  .close-error {
    background: colours.$red;
    color: colours.$white;
    border: none;
    padding: variables.$spacing-sm variables.$spacing-lg;
    border-radius: variables.$border-radius-md;
    cursor: pointer;
    font-weight: 500;
    transition: variables.$transition-base;

    &:hover {
      filter: brightness(0.8);
    }
  }
}

.shape-container {
  width: 100px;
  height: 100px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: variables.$transition-base;
}

.shape {
  width: 50px;
  height: 50px;
  background: linear-gradient(135deg, colours.$lilac, colours.$dark-lilac);
  animation: morph 2s infinite ease-in-out;
  box-shadow: 0 4px 20px rgba(colours.$lilac, 0.3);
}

@media (max-width: 1100px) {
  .room-uploader-container {
    max-width: 90vw;
    padding: variables.$spacing-xl;
  }
  .object-upload {
    max-width: 98vw;
  }
  .image-upload-grid {
    grid-template-columns: repeat(2, 1fr);
    max-width: 98vw;
  }
}

@media (max-width: 700px) {
  .room-uploader-container {
    max-width: 100vw;
    padding: variables.$spacing-lg;
  }
  .object-upload {
    max-width: 100vw;
    padding: variables.$spacing-md;
  }
  .object-header {
    flex-direction: column;
    gap: variables.$spacing-xs;
    align-items: stretch;
    max-width: 100vw;
  }
  .image-upload-grid {
    grid-template-columns: 1fr;
    gap: variables.$spacing-lg;
    max-width: 100vw;
  }
}
